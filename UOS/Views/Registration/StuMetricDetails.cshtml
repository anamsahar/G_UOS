@model UOS.Models.Registration.MetricDetails
@{
    ViewBag.Title = "_Stu_matric_info";
    Layout = "~/Views/Shared/_layout_reg.cshtml";
}

<script src="https://unpkg.com/gijgo@1.9.13/js/gijgo.min.js" type="text/javascript"></script>
<link href="https://unpkg.com/gijgo@1.9.13/css/gijgo.min.css" rel="stylesheet" type="text/css" />

<div class="container bg-white " style="padding:20px;">
    <div class="row">

        <div class="col-lg-3 col-md-4 col-sm-12 col-12">
            <!-- Nav tabs -->
            <nav class="nav  flex-column text-center">
                <a class="nav-item nav-link  py-4 formdata">
                    <i class="fa fa-child fa-lg mr-2"></i> Personal Details
                </a>
                <a class="nav-item nav-link py-4 formdata">
                    <i class="fa fa-line-chart fa-lg mr-2"></i> Guardian Details
                </a>
                <a href="/Registration/StuMetricDetails" class="nav-item nav-link  py-4 formdata active">
                    <i class="fa fa-user fa-lg mr-2"></i>  Matric/O-Level
                </a>
                <a href="/Registration/StuInterDetails" class="nav-item nav-link py-4 formdata">
                    <i class="fa fa-id-card fa-lg mr-2"></i> Inter/A-level
                </a>
                <a href="/Registration/StuBachelorsDetails" class="nav-item nav-link py-4 formdata">
                    <i class="fa fa-id-card fa-lg mr-2"></i> Bachelors Details
                </a>
                <a href="/Registration/StuAttachDocument" class="nav-item nav-link py-4 formdata">
                    <i class="fa fa-id-card fa-lg mr-2"></i> Attach Documents
                </a>
                <a href="/Registration/StuAffiliatedClg" class="nav-item nav-link py-4 formdata">
                    <i class="fa fa-paperclip fa-lg mr-2 "></i> For Affiliated Colleges
                </a>

            </nav>
        </div>
        <div class="col-lg-9 col-md-8 col-sm-12 col-12">


            @using (Html.BeginForm("StuMetricDetails", "Registration", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.ValidationSummary("", new { @style = "color:red;" })
                <div class="col-md-12">
                    <div class="form-group row align">
                        @Html.LabelFor(reg => reg.degree, new { @class = "col-form-label label col-lg-3 col-md-4" })
                        <div class=" col-lg-6  col-md-8">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-graduation-cap"></i></span>
                                </div>
                                @Html.TextBoxFor(reg => reg.degree, new { @class = "form-control form-control-sm", @placeholder = "Matric/SSc" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group row align">
                        @Html.LabelFor(reg => reg.subjects, new { @class = "col-form-label label col-lg-3 col-md-4" })
                        <div class=" col-lg-6  col-md-8">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-bookmark"></i></span>
                                </div>
                                @Html.TextBoxFor(reg => reg.subjects, new { @class = "form-control form-control-sm", @placeholder = "Science/Math" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group row align">
                        @Html.LabelFor(reg => reg.board, new { @class = "col-form-label label col-lg-3 col-md-4" })
                        <div class=" col-lg-6  col-md-8">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-registered"></i></span>
                                </div>
                                @*@Html.TextBoxFor(reg => reg.board, new { @class = "form-control form-control-sm", @placeholder = "BISE Sargodha" })*@
                                @Html.DropDownListFor(m => m.board, new SelectList(Model.ddl_obj_intr_boad, "B_ID", "Board_Name"), new { @class = "form-control form-control-sm", @id = "ddlboards" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group row align">
                        @Html.LabelFor(reg => reg.p_year, new { @class = "col-form-label label col-lg-3 col-md-4" })
                        <div class=" col-lg-6  col-md-8">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-calendar-check-o"></i></span>
                                </div>
                                @*@Html.TextBoxFor(reg => reg.p_year, new { @class = "form-control form-control-sm", @placeholder = "Year of Passing" })*@
                                @Html.DropDownListFor(m => m.p_year, new SelectList(Model.ddl_obj_years, "ID", "Year"), new { @class = "form-control form-control-sm", @id = "ddlyear" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group row align">
                        @Html.LabelFor(reg => reg.exam_type, new { @class = "col-form-label label col-lg-3 col-md-4" })
                        <div class=" col-lg-6  col-md-8 text-left ">
                            <div class="custom-control custom-radio small custom-control-inline">
                                @Html.RadioButtonFor(reg => reg.exam_type, "Annual", new { @class = "custom-control-input p1", @id = "custom" })
                                <label class="custom-control-label p-1" for="custom">Annual</label>
                            </div>
                            <div class="custom-control custom-radio small custom-control-inline">
                                @Html.RadioButtonFor(reg => reg.exam_type, "Supplementary", new { @class = "custom-control-input p1", @id = "custom1" })
                                <label class="custom-control-label p-1" for="custom1">Supplementary</label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group row align">
                        @Html.LabelFor(reg => reg.roll_no, new { @class = "col-form-label label col-lg-3 col-md-4" })
                        <div class=" col-lg-6  col-md-8">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-file-text-o"></i></span>
                                </div>
                                @Html.TextBoxFor(reg => reg.roll_no, new { @class = "form-control form-control-sm", @placeholder = "Board Roll No" })
                            </div>
                        </div>
                    </div>

                    <div class=" row align">
                        @Html.LabelFor(reg => reg.t_marks, new { @class = "col-form-label label col-lg-3 col-md-4" })
                        <div class=" col-lg-6  col-md-8">
                            <div class="row">
                                <div class=" col-md-6 form-group">
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"><i class="fa fa-pencil-square-o "></i></span>
                                        </div>
                                        @Html.TextBoxFor(reg => reg.o_marks, new { @class = "form-control form-control-sm", @placeholder = "Obtained Marks", @id = "txtO_mark" })
                                    </div>
                                </div>
                                <div class=" col-md-6 form-group">
                                    <div class="input-group ">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"><i class="fa fa-pencil"></i></span>
                                        </div>
                                        @Html.TextBoxFor(reg => reg.t_marks, new { @class = "form-control form-control-sm", @placeholder = "Total Marks", @id = "txtT_mark" })
                                    </div>
                                </div>
                                <div class=" col-md-6 form-group">
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"><i class="fa fa-percent "></i></span>
                                        </div>
                                        @Html.TextBoxFor(reg => reg.Perstage, new { @class = "form-control form-control-sm", @readonly = "readonly", @placeholder = "percentage", @id = "txtperstage" })
                                    </div>
                                </div>
                                <div class=" col-md-6 form-group">
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"><i class="fa fa-percent "></i></span>
                                        </div>
                                        @Html.TextBoxFor(reg => reg.division, new { @class = "form-control form-control-sm", @placeholder = "Division" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group row align">
                        @Html.LabelFor(reg => reg.matric_scan, new { @class = "col-form-label label col-lg-3 col-md-4" })
                        <div class=" col-lg-6  col-md-8">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-paperclip"></i></span>
                                </div>
                                <div class="custom-file">
                                    <input type="file" class="custom-file-input  " id=" customfile" name="ImageFile">
                                    <label class="custom-file-label text-left form-control-sm" for="customFile">Matric Degree</label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group row align">
                        <div class=" col-lg-3 col-md-4"></div>
                        <div class=" form-group col-lg-6  col-md-8 ">
                            <button class="btn btn-success btn-rounded  mt-2 px-3  float-left btn-sm"> Submit </button>
                        </div>
                    </div>

                </div>



            }

        </div>

    </div>
</div>
@{
    if (!string.IsNullOrEmpty(ViewBag.DDImageNull))
    {
        <script type="text/javascript">toastr.error("@ViewBag.DDImageNull")</script>
    }
    if (TempData["Success"] != null)
    {
        <script type="text/javascript">toastr.success("@TempData["Success"].ToString()")</script>
    }
    if (!string.IsNullOrEmpty(ViewBag.Exception))
    {
        <script type="text/javascript">toastr.error("@ViewBag.Exception ")</script>
    }
}

<script src="~/Scripts/toastr.min.js"></script>

<script>
    $(document).ready(function () {


        $('#txtO_mark').on('input', function (e) {
            Calcution();
        });

        $('#txtT_mark').on('input', function (e) {
            Calcution();
        });

        function Calcution()
        {
            Ob = parseFloat($('#txtO_mark').val());
            Tb = parseFloat($('#txtT_mark').val());

            if (Ob > 0 && Tb > 0)
            {
                var reslt = (Ob * 100) / Tb;
                $('#txtperstage').val(reslt.toFixed(2));
            }
        }
    })

</script>